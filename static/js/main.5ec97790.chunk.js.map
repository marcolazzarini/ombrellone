{"version":3,"sources":["firebase.js","Grid.js","theme.js","components/UserCard/styles.js","components/UserCard/UserCard.js","components/UsersView/styles.js","components/UsersView/UsersView.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ref","sizes","xs","max","size","cols","margin","sm","min","md","lg","xl","xxl","SIZES_DEFINITION","media","Object","entries","reduce","acc","def","css","Container","styled","div","getColumnDefinition","value","Row","attrs","className","props","alignment","getVerticalAlignment","align","Col","getHorizontalAlignment","fontColor","background","cardBackground","darkGrey","primary01","primary02","UserCard","theme","Header","Body","opened","Input","input","InputContainer","UDM","Button","UserInfo","User","LeftValue","color","Avatar","AvatarWithProgress","string","useState","expenseValue","setExpenseValue","addExpenseOpened","setAddExpenseOpened","id","img","dataRef","database","child","computeColor","onClick","minValue","maxValue","counterClockwise","styles","buildStyles","strokeLinecap","pathTransitionDuration","pathColor","trailColor","src","process","alt","width","user","role","aria-label","emojiByUser","charAt","toUpperCase","slice","type","autoFocus","onChange","event","target","set","AppContainer","UsersView","users","setUsers","data","setData","useEffect","on","snapshot","val","usersWithData","map","Grid","userData","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ec97790.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCTRKL-BTfB4pSiZJh--9oStesMTySrpEg\",\n    authDomain: \"ombrellone-1f2f0.firebaseapp.com\",\n    databaseURL: \"https://ombrellone-1f2f0.firebaseio.com\",\n    projectId: \"ombrellone-1f2f0\",\n    storageBucket: \"ombrellone-1f2f0.appspot.com\",\n    messagingSenderId: \"428776112192\",\n    appId: \"1:428776112192:web:b3b3f53757f22a87d7dfa5\",\n    measurementId: \"G-LTMFQSMZFK\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database().ref();","import styled, { css } from 'styled-components'\n\nconst sizes = {\n    gutter: 12,\n    grid: {\n        xs: { max: 575, size: \"100%\", cols: 4, margin: 8 },\n        sm: { min: 576, max: 767, size: \"100%\", cols: 8, margin: 32 },\n        md: { min: 768, max: 991, size: \"100%\", cols: 8, margin: 32 },\n        lg: { min: 992, max: 1175, size: 1080, cols: 16, margin: 48 },\n        xl: { min: 1176, max: 1431, size: 1336, cols: 16, margin: 48 },\n        xxl: { min: 1432, size: 1280, cols: 16, margin: 48 }\n    }\n};\n\nconst SIZES_DEFINITION = {\n    xs: 'xs',\n    sm: 'sm',\n    md: 'md',\n    lg: 'lg',\n    xl: 'xl',\n    xxl: 'xxl'\n};\n\nexport const media = Object.entries(sizes.grid).reduce((acc, [size, def]) => {\n    if (!def.max) {\n        acc[size] = (...args) => css`\n          @media (min-width: ${def.min}px) {\n            ${css(...args)}\n          } \n        `\n    } else if (!def.min) {\n        acc[size] = (...args) => css`\n          @media (max-width: ${def.max}px) {\n            ${css(...args)}\n          } \n        `\n    } else {\n        acc[size] = (...args) => css`\n          @media (min-width: ${def.min}px) and (max-width: ${def.max}px) {\n            ${css(...args)}\n          } \n        `\n    }\n    return acc;\n}, {});\n\nexport const matchMedia = {\n    isXs: () => window.matchMedia(`(max-width: ${sizes.grid.xs.max}px)`).matches,\n    isSm: () => window.matchMedia(`(min-width: ${sizes.grid.sm.min}px) and (max-width: ${sizes.grid.sm.max}px)`).matches,\n    isMd: () => window.matchMedia(`(min-width: ${sizes.grid.md.min}px) and (max-width: ${sizes.grid.md.max}px)`).matches,\n    isLg: () => window.matchMedia(`(min-width: ${sizes.grid.lg.min}px) and (max-width: ${sizes.grid.lg.max}px)`).matches,\n    isXl: () => window.matchMedia(`(min-width: ${sizes.grid.xl.min}px) and (max-width: ${sizes.grid.xl.max}px)`).matches,\n    isXxl: () => window.matchMedia(`(min-width: ${sizes.grid.xxl.min}px)`).matches\n};\n\nconst Container = styled.div`\n    margin: 0 auto;\n    \n    ${ media.xs`max-width: ${sizes.grid.xs.size}px; margin: 4px;`}\n    ${ media.sm`max-width: ${ sizes.grid.sm.size }px;`}\n    ${ media.md`max-width: ${ sizes.grid.md.size }px;`}\n    ${ media.lg`max-width: ${ sizes.grid.lg.size }px;`}\n    ${ media.xl`max-width: ${ sizes.grid.xl.size }px;`}\n    ${ media.xxl`max-width: ${ sizes.grid.xxl.size }px;`}\n`;\n\nconst getVerticalAlignment = alignment => {\n    switch(alignment) {\n        case 'center': return `align-items: center`;\n        case 'top': return `align-items: flex-start`;\n        case 'bottom': return `align-items: flex-end`;\n        case 'baseline': return `align-items: baseline`;\n        default: return `align-self: stretch;`;//if no vertical align is specified, all items inherit same height\n    }\n};\n\nconst getHorizontalAlignment = alignment => {\n    if (alignment) {\n        switch(alignment) {\n            case 'center': return `display: flex; justify-content: center`;\n            case 'right': return `display: flex; justify-content: flex-end`;\n            default: return `display: flex; justify-content: flex-start`;\n        }\n    }\n};\n\nconst getColumnDefinition = (size, value) => {\n    if (value) {\n        return media[size]`\n            flex: 0 0 ${100*value/sizes.grid[size].cols }%;\n            max-width: ${100*value/sizes.grid[size].cols }%;   \n        `;\n    }\n    return media[size]`\n        flex-basis: 0;\n        flex: 1;\n        flex-grow: 1;\n        max-width: 100%;   \n    `;\n};\n\nconst Row = styled.div.attrs(() => ({ className: 'grid-row'}))`\n  display: flex;\n  flex-wrap: wrap;\n  \n  ${props => getVerticalAlignment(props.align)};\n  \n  margin-top: -${4}px;\n  margin-bottom: ${4}px;\n  margin-left: -${sizes.gutter}px;\n  margin-right: -${sizes.gutter}px;\n  \n  .grid-row {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst Col = styled.div`\n  margin-top: ${4}px;\n  \n  padding: 0 ${sizes.gutter}px;\n  ${ props => getHorizontalAlignment(props.align)}; \n  \n  ${ props => getColumnDefinition(SIZES_DEFINITION.xs, props.xs)};\n  ${ props => getColumnDefinition(SIZES_DEFINITION.sm, props.sm)};  \n  ${ props => getColumnDefinition(SIZES_DEFINITION.md, props.md)};\n  ${ props => getColumnDefinition(SIZES_DEFINITION.lg, props.lg)};\n  ${ props => getColumnDefinition(SIZES_DEFINITION.xl, props.xl)};\n  ${ props => getColumnDefinition(SIZES_DEFINITION.xxl, props.xxl)};\n`;\n\nexport default {\n    Container: Container,\n    Row: Row,\n    Col: Col\n};","export default {\n    colors: {\n        fontColor: '#fff',\n        background: '#141414',\n        cardBackground: '#222',\n        darkGrey: '#434343',\n        primary01: '#265FFF',\n        primary02: '#0D42D8',\n    }\n}","import styled from 'styled-components';\nimport theme from '../../theme'\n\nexport const UserCard = styled.div`\n  font-size: 14px;\n  background-color: ${theme.colors.cardBackground };\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px;\n`;\n\nexport const Body = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  transition: height ease-out .25s;\n  ${ props => props.opened ? `opacity: 1; padding: 16px; height: 54px;` : `opacity: 0; padding: 0; height: 0;` };\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #fff;\n  border-radius: 0;\n  background-color: transparent;\n  color: #fff;\n  height: 40px;\n  padding: 0 8px 0 32px;\n  font-size: 14px;\n  transition: box-shadow ease-out .25s;\n  &:focus, &:active {\n    outline: none;\n    border-color: ${theme.colors.primary01};\n    box-shadow: 0 0 0 2px ${theme.colors.primary01};\n  }\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const UDM = styled.div`\n  position: absolute;\n  left: 12px;\n  top: 8px;\n  font-size: 18px;\n  color: ${ theme.colors.darkGrey };\n`;\n\nexport const Button = styled.div`\n  margin-left: 16px;\n  appearance: none;\n  height: 40px;\n  padding: 0 16px;\n  font-size: 14px;\n  line-height: 40px;\n  color: #fff;\n  font-weight: 600;\n  border: 2px solid #fff;\n  transition: border-color ease-out .25s, color ease-out .25s;\n  \n  &:active {\n    color: ${theme.colors.primary01 };\n    border-color: ${theme.colors.primary01 };\n  }\n`;\n\n\nexport const UserInfo = styled.div`\n  margin-left: 16px;\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const User = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  flex: 1;\n`;\n\nexport const LeftValue = styled.div`\n  font-size: 30px;\n  font-weight: 600;\n  margin-right: 8px;\n  color: ${ props => props.color };\n`;\n\nexport const Avatar = styled.div`\n  width: 56px;\n  height: 56px;\n  border-radius: 28px;\n  border: 1px solid ${ theme.colors.darkGrey };\n  overflow: hidden;\n`;\n\nexport const AvatarWithProgress = styled.div`\n  width: 70px;\n  height: 70px;\n`;","import React, { useState } from 'react'\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport * as Styles from './styles'\nimport database from '../../firebase'\n\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\nconst UserCard = props => {\n    const [expenseValue, setExpenseValue] = useState('');\n    const [addExpenseOpened, setAddExpenseOpened] = useState(false);\n    const { img, id, value, max } = props;\n\n    const dataRef = database.child('consumazioni').child(id)\n\n    const pay = () => {\n        dataRef.set(value-expenseValue);\n        setExpenseValue(0);\n        setAddExpenseOpened(false);\n    };\n\n    const computeColor = value => value >=35 ? '#265FFF' : (value > 15 ? '#B18900' : '#DA0A16');\n\n    const computeProgressStyles = () => buildStyles({\n            strokeLinecap: 'butt',\n            pathTransitionDuration: 0.5,\n            pathColor: computeColor(value),\n            trailColor: '#434343'\n        });\n\n    const emojiByUser = user => {\n        switch (user) {\n            case 'lazza': return <span role=\"img\" aria-label=\"whale\">🐳</span>;\n            case 'seba': return <span role=\"img\" aria-label=\"dragon\">🐲</span>;\n            case 'dario': return <span role=\"img\" aria-label=\"trex\">🦖</span>;\n            case 'ricky': return <span role=\"img\" aria-label=\"shuttle\">🚀</span>;\n            case 'teo': return <span role=\"img\" aria-label=\"frog\">🐸</span>;\n            case 'nico': return <span role=\"img\" aria-label=\"snake\">🐍</span>;\n            case 'tara': return <span role=\"img\" aria-label=\"snake\">👨🏽‍🔧</span>;\n            default: return <span role=\"img\" aria-label=\"sun\">☀️</span>;\n        }\n    };\n\n    return (\n        <Styles.UserCard>\n            <Styles.Header onClick={() => setAddExpenseOpened(!addExpenseOpened)}>\n                <Styles.AvatarWithProgress>\n                    <CircularProgressbarWithChildren value={value} minValue={0} maxValue={max} counterClockwise={true} styles={computeProgressStyles()}>\n                        <Styles.Avatar>\n                            <img src={process.env.PUBLIC_URL + '/images/' + id + '.png'} alt={id} width={56}/>\n                        </Styles.Avatar>\n                    </CircularProgressbarWithChildren>\n                </Styles.AvatarWithProgress>\n                <Styles.UserInfo>\n                    <Styles.User>{emojiByUser(id)}&nbsp;{ capitalize(id) }</Styles.User>\n                    <Styles.LeftValue color={computeColor(value)}>€ {value}</Styles.LeftValue>\n                </Styles.UserInfo>\n            </Styles.Header>\n            <Styles.Body opened={addExpenseOpened}>\n                <Styles.InputContainer>\n                    <Styles.UDM>€</Styles.UDM>\n                    <Styles.Input type=\"number\" autoFocus value={expenseValue} onChange={event => setExpenseValue(event.target.value)} />\n                </Styles.InputContainer>\n                <Styles.Button type=\"button\" onClick={pay}><span role=\"img\" aria-label=\"whale\">🍺</span>&nbsp;Paga</Styles.Button>\n            </Styles.Body>\n        </Styles.UserCard>\n    )\n};\n\nexport default UserCard;","import styled from 'styled-components';\nimport theme from '../../theme'\n\nexport const AppContainer = styled.div`\n  height: 100%;\n  overflow-x: hidden;\n  background-color: ${ theme.colors.background };\n  color: #fff;\n  \n  h1 {\n    text-align: center;\n    font-size: 32px;\n    font-weight: 600;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport database from '../../firebase'\nimport Grid from '../../Grid'\nimport UserCard from '../UserCard/UserCard'\nimport * as Styles from './styles'\nconst UsersView = () => {\n    const [users, setUsers] = useState(null);\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        database.child('users').on('value', snapshot => {\n            setUsers(snapshot.val());\n        });\n\n        database.child('consumazioni').on('value', snapshot => {\n            setData(snapshot.val());\n        });\n    }, []);\n\n\n    if (!users || !data) return <div />;\n\n    const usersWithData = users.map(user => ({ ...user, value: data[user.id] }))\n    return (\n        <Styles.AppContainer>\n            <h1><span role=\"img\" aria-label=\"palma\">🌴</span>Ombrellone App<span role=\"img\" aria-label=\"drink\">🍹</span></h1>\n            <Grid.Container>\n                { usersWithData.map((userData, index) => (\n                        <Grid.Row key={index}>\n                            <Grid.Col>\n                                <UserCard key={index} { ...userData} />\n                            </Grid.Col>\n                        </Grid.Row>\n                    )\n                )}\n            </Grid.Container>\n        </Styles.AppContainer>\n    )\n\n};\n\nexport default UsersView;\n","import React from 'react';\nimport './App.css';\nimport UsersView from './components/UsersView/UsersView'\n\n\n\nconst App = () => <UsersView />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}